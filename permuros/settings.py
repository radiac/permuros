"""
Django settings for permuros project.

Generated by 'django-admin startproject' using Django 4.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from os import environ
from pathlib import Path

from configurations import Configuration

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
STORE_PATH = Path(environ.get("DJANGO_STORE_PATH", BASE_DIR.parent / "store"))


class Common(Configuration):
    SECRET_KEY = environ.get("DJANGO_SECRET_KEY", "secret")
    DEBUG = False
    ALLOWED_HOSTS = environ.get("DJANGO_ALLOWED_HOSTS", "*").split(",")

    # Application definition
    INSTALLED_APPS = [
        "django.contrib.admin",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.messages",
        "django.contrib.staticfiles",
        # Additional third party:
        "django.contrib.postgres",
        "compressor",
        # Project:
    ]

    MIDDLEWARE = [
        "django.middleware.security.SecurityMiddleware",
        "whitenoise.middleware.WhiteNoiseMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
    ]

    ROOT_URLCONF = "permuros.urls"

    TEMPLATES = [
        {
            "BACKEND": "django.template.backends.django.DjangoTemplates",
            "DIRS": [BASE_DIR / "templates"],
            "APP_DIRS": True,
            "OPTIONS": {
                "context_processors": [
                    "django.template.context_processors.debug",
                    "django.template.context_processors.request",
                    "django.contrib.auth.context_processors.auth",
                    "django.contrib.messages.context_processors.messages",
                ],
            },
        },
    ]

    WSGI_APPLICATION = "permuros.wsgi.application"

    # Database
    # https://docs.djangoproject.com/en/4.2/ref/settings/#databases
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql_psycopg2",
            "NAME": environ.get("POSTGRES_NAME", "postgres"),
            "USER": environ.get("POSTGRES_USER", "postgres"),
            "PASSWORD": environ.get("POSTGRES_PASSWORD", "postgres"),
            "HOST": environ.get("POSTGRES_HOST", "localhost"),
            "CONN_MAX_AGE": 600,
        }
    }

    # Password validation
    # https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

    AUTH_PASSWORD_VALIDATORS = [
        {
            "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
        },
    ]

    # Internationalization
    # https://docs.djangoproject.com/en/4.2/topics/i18n/
    LANGUAGE_CODE = "en-us"
    TIME_ZONE = "UTC"
    USE_I18N = True
    USE_TZ = True

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/4.2/howto/static-files/

    STATIC_URL = "static/"
    STATIC_ROOT = STORE_PATH / "static"
    MEDIA_URL = "media/"
    MEDIA_ROOT = STORE_PATH / "media"
    STORAGES = {
        "default": {
            "BACKEND": "django.core.files.storage.FileSystemStorage",
        },
        "staticfiles": {
            "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
        },
    }
    STATICFILES_FINDERS = (
        "django.contrib.staticfiles.finders.FileSystemFinder",
        "django.contrib.staticfiles.finders.AppDirectoriesFinder",
        "compressor.finders.CompressorFinder",
    )
    STATICFILES_DIRS = [BASE_DIR / "static"]
    WHITENOISE_ROOT = BASE_DIR / "public"

    # Default primary key field type
    # https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

    DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


class Dev(Common):
    DEBUG = True
    AUTH_PASSWORD_VALIDATORS = []

    # E-mail to file
    EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend"
    EMAIL_FILE_PATH = STORE_PATH / "tmp" / "emails"

    INSTALLED_APPS = (
        [
            "whitenoise.runserver_nostatic",
        ]
        + Common.INSTALLED_APPS
        + [
            "django_browser_reload",
        ]
    )

    MIDDLEWARE = Common.MIDDLEWARE + [
        "django_browser_reload.middleware.BrowserReloadMiddleware",
    ]


class Test(Common):
    pass


class Live(Common):
    DEBUG = False

    @property
    def SECRET_KEY(self):
        return environ["SECRET_KEY"]

    @property
    def ALLOWED_HOSTS(self):
        return environ["ALLOWED_HOSTS"]

    COMPRESS_OFFLINE = True

    EMAIL_HOST = environ.get("EMAIL_HOST", "localhost")
